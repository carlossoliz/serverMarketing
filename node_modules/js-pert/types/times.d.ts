import { IActivitiesInferred } from './activities';
import { INetwork } from './network';
interface IMutateTimes {
    times: IDictionaryTimes;
    mutate: (number: number, nodeId: string) => number;
}
interface IFind {
    network: INetwork;
    currentNode: string;
    foundTimes: IDictionaryTimes;
    activitiesParams: IActivitiesInferred;
    type: 'forward' | 'backward';
}
export interface IDictionaryTimes {
    [key: string]: number;
}
export declare const mutate: ({ times, mutate }: IMutateTimes) => IDictionaryTimes;
declare const find: ({ network, currentNode, foundTimes, activitiesParams, type, }: IFind) => IDictionaryTimes;
export default find;
